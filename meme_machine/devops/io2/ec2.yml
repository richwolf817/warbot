AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Deploys a Solana Validator instance on r6a.8xlarge with a **single io2 EBS** for ledger & accounts.

Parameters:
  VpcId:
    Description: VPC ID for deployment.
    Type: AWS::EC2::VPC::Id
    Default: vpc-0994ff0f1275da795
  SubnetId:
    Description: Subnet ID for deployment.
    Type: AWS::EC2::Subnet::Id
    Default: subnet-011129f596ceec808
  InstanceType:
    Description: EC2 instance type.
    Type: String
    Default: r8g.48xlarge
  AMIId:
    Description: AMI ID built by Packer.
    Type: AWS::EC2::Image::Id
    Default: ami-0c518311db5640eff
  KeyName:
    Description: Name of an existing SSH KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
    Default: raydium

Resources:
  SolanaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Solana Validator instance.
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8899
          ToPort: 8899
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8900
          ToPort: 8900
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 8000
          ToPort: 8020
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SolanaValidatorSG

  SolanaInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIId
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SolanaSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 50
            VolumeType: io2
            Iops: 64000
            DeleteOnTermination: true
        - DeviceName: /dev/xvdf
          Ebs:
            VolumeSize: 500
            VolumeType: io2
            Iops: 64000
            DeleteOnTermination: true
        - DeviceName: /dev/xvdg
          Ebs:
            VolumeSize: 500
            VolumeType: io2
            Iops: 64000
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e

          echo "Formatting and mounting ledger volume (/dev/xvdf)..."
          sudo mkfs -t xfs /dev/xvdf
          sudo mkdir -p /home/ec2-user/solana/ledger
          sudo mount /dev/xvdf /home/ec2-user/solana/ledger
          echo '/dev/xvdf /home/ec2-user/solana/ledger xfs defaults,nofail 0 2' | sudo tee -a /etc/fstab
          sudo chown -R ec2-user:ec2-user /home/ec2-user/solana/ledger

          echo "Formatting and mounting accounts volume (/dev/xvdg)..."
          sudo mkfs -t xfs /dev/xvdg
          sudo mkdir -p /home/ec2-user/solana/accounts
          sudo mount /dev/xvdg /home/ec2-user/solana/accounts
          echo '/dev/xvdg /home/ec2-user/solana/accounts xfs defaults,nofail 0 2' | sudo tee -a /etc/fstab
          sudo chown -R ec2-user:ec2-user /home/ec2-user/solana/accounts

          echo "üöÄ Updating system packages..."
          sudo dnf update -y

          echo "üì¶ Installing essential packages..."
          sudo dnf install -y curl wget nano jq tmux htop net-tools iotop iftop unzip tar git \
            gcc-c++ make numactl gcc gcc-c++ make python3-devel protobuf protobuf-devel --allowerasing

          echo "üîß Installing Solana CLI (v2.1.13) via Anza..."
          sh -c "$(curl -sSfL https://release.anza.xyz/v2.1.13/install)"

          echo "üîÑ Ensuring Solana CLI is in PATH..."
          source ~/.bash_profile

          echo "‚úÖ Verifying Solana installation..."
          solana --version || { echo "‚ùå Solana installation failed!"; exit 1; }

          echo "üîê Generating validator keypair (if not exists)..."
          mkdir -p ~/solana && chmod 700 ~/solana
          [ -f ~/solana/validator-keypair.json ] || solana-keygen new --outfile ~/solana/validator-keypair.json --no-bip39-passphrase

          echo "üìú Extracting public key from the generated keypair..."
          VALIDATOR_PUBKEY=$(solana-keygen pubkey ~/solana/validator-keypair.json)
          echo "Validator Public Key: $VALIDATOR_PUBKEY"

          echo "‚öôÔ∏è Applying OS tuning for Solana Validator..."
          sudo tee /etc/sysctl.d/60-solana.conf <<EOF
          net.core.rmem_max = 134217728
          net.core.rmem_default = 134217728
          net.core.wmem_max = 134217728
          net.core.wmem_default = 134217728
          net.ipv4.tcp_rmem = 4096 87380 134217728
          net.ipv4.tcp_wmem = 4096 65536 134217728
          vm.max_map_count = 1000000
          EOF

          echo "üîÑ Applying sysctl changes..."
          sudo sysctl --system

      Tags:
        - Key: Name
          Value: SolanaIo2

Outputs:
  InstanceId:
    Description: The EC2 Instance ID.
    Value: !Ref SolanaInstance
  PublicIP:
    Description: Public IP address.
    Value: !GetAtt SolanaInstance.PublicIp
